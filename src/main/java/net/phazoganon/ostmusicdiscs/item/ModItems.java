package net.phazoganon.ostmusicdiscs.item;

import net.minecraft.core.registries.Registries;
import net.minecraft.resources.ResourceKey;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.Rarity;
import net.neoforged.bus.api.IEventBus;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;
import net.phazoganon.ostmusicdiscs.OSTMusicDiscs;
import net.phazoganon.ostmusicdiscs.sound.ModSounds;

public class ModItems {
    public static final DeferredRegister.Items ITEMS = DeferredRegister.createItems(OSTMusicDiscs.MODID);
    public static final DeferredItem<Item> A_FAMILIAR_ROOM_MUSIC_DISC = ITEMS.register("a_familiar_room_music_disc", () -> new Item((new Item.Properties()).setId(prefix("a_familiar_room_music_disc")).jukeboxPlayable(ModSounds.A_FAMILIAR_ROOM_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> AERIE_MUSIC_DISC = ITEMS.register("aerie_music_disc", () -> new Item((new Item.Properties()).setId(prefix("aerie_music_disc")).jukeboxPlayable(ModSounds.AERIE_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ALPHA_MUSIC_DISC = ITEMS.register("alpha_music_disc", () -> new Item((new Item.Properties()).setId(prefix("alpha_music_disc")).jukeboxPlayable(ModSounds.ALPHA_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> AN_ORDINARY_DAY_MUSIC_DISC = ITEMS.register("an_ordinary_day_music_disc", () -> new Item((new Item.Properties()).setId(prefix("an_ordinary_day_music_disc")).jukeboxPlayable(ModSounds.AN_ORDINARY_DAY_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ANCESTRY_MUSIC_DISC = ITEMS.register("ancestry_music_disc", () -> new Item((new Item.Properties()).setId(prefix("ancestry_music_disc")).jukeboxPlayable(ModSounds.ANCESTRY_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ARIA_MATH_MUSIC_DISC = ITEMS.register("aria_math_music_disc", () -> new Item((new Item.Properties()).setId(prefix("aria_math_music_disc")).jukeboxPlayable(ModSounds.ARIA_MATH_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> AXOLOTL_MUSIC_DISC = ITEMS.register("axolotl_music_disc", () -> new Item((new Item.Properties()).setId(prefix("axolotl_music_disc")).jukeboxPlayable(ModSounds.AXOLOTL_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> BALLAD_OF_THE_CATS_MUSIC_DISC = ITEMS.register("ballad_of_the_cats_music_disc", () -> new Item((new Item.Properties()).setId(prefix("ballad_of_the_cats_music_disc")).jukeboxPlayable(ModSounds.BALLAD_OF_THE_CATS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> BEGINNING_2_MUSIC_DISC = ITEMS.register("beginning_2_music_disc", () -> new Item((new Item.Properties()).setId(prefix("beginning_2_music_disc")).jukeboxPlayable(ModSounds.BEGINNING_2_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> BIOME_FEST_MUSIC_DISC = ITEMS.register("biome_fest_music_disc", () -> new Item((new Item.Properties()).setId(prefix("biome_fest_music_disc")).jukeboxPlayable(ModSounds.BIOME_FEST_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> BLIND_SPOTS_MUSIC_DISC = ITEMS.register("blind_spots_music_disc", () -> new Item((new Item.Properties()).setId(prefix("blind_spots_music_disc")).jukeboxPlayable(ModSounds.BLIND_SPOTS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> BOSS_MUSIC_DISC = ITEMS.register("boss_music_disc", () -> new Item((new Item.Properties()).setId(prefix("boss_music_disc")).jukeboxPlayable(ModSounds.BOSS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> BROMELIAD_MUSIC_DISC = ITEMS.register("bromeliad_music_disc", () -> new Item((new Item.Properties()).setId(prefix("bromeliad_music_disc")).jukeboxPlayable(ModSounds.BROMELIAD_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> CHRYSOPOEIA_MUSIC_DISC = ITEMS.register("chrysopoeia_music_disc", () -> new Item((new Item.Properties()).setId(prefix("chrysopoeia_music_disc")).jukeboxPlayable(ModSounds.CHRYSOPOEIA_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> CLARK_MUSIC_DISC = ITEMS.register("clark_music_disc", () -> new Item((new Item.Properties()).setId(prefix("clark_music_disc")).jukeboxPlayable(ModSounds.CLARK_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> COMFORTING_MEMORIES_MUSIC_DISC = ITEMS.register("comforting_memories_music_disc", () -> new Item((new Item.Properties()).setId(prefix("comforting_memories_music_disc")).jukeboxPlayable(ModSounds.COMFORTING_MEMORIES_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> CONCRETE_HALLS_MUSIC_DISC = ITEMS.register("concrete_halls_music_disc", () -> new Item((new Item.Properties()).setId(prefix("concrete_halls_music_disc")).jukeboxPlayable(ModSounds.CONCRETE_HALLS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> CRESCENT_DUNES_MUSIC_DISC = ITEMS.register("crescent_dunes_music_disc", () -> new Item((new Item.Properties()).setId(prefix("crescent_dunes_music_disc")).jukeboxPlayable(ModSounds.CRESCENT_DUNES_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> DANNY_MUSIC_DISC = ITEMS.register("danny_music_disc", () -> new Item((new Item.Properties()).setId(prefix("danny_music_disc")).jukeboxPlayable(ModSounds.DANNY_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> DEAD_VOXEL_MUSIC_DISC = ITEMS.register("dead_voxel_music_disc", () -> new Item((new Item.Properties()).setId(prefix("dead_voxel_music_disc")).jukeboxPlayable(ModSounds.DEAD_VOXEL_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> DEEPER_MUSIC_DISC = ITEMS.register("deeper_music_disc", () -> new Item((new Item.Properties()).setId(prefix("deeper_music_disc")).jukeboxPlayable(ModSounds.DEEPER_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> DRAGON_FISH_MUSIC_DISC = ITEMS.register("dragon_fish_music_disc", () -> new Item((new Item.Properties()).setId(prefix("dragon_fish_music_disc")).jukeboxPlayable(ModSounds.DRAGON_FISH_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> DREITON_MUSIC_DISC = ITEMS.register("dreiton_music_disc", () -> new Item((new Item.Properties()).setId(prefix("dreiton_music_disc")).jukeboxPlayable(ModSounds.DREITON_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> DRY_HANDS_MUSIC_DISC = ITEMS.register("dry_hands_music_disc", () -> new Item((new Item.Properties()).setId(prefix("dry_hands_music_disc")).jukeboxPlayable(ModSounds.DRY_HANDS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ECHO_IN_THE_WIND_MUSIC_DISC = ITEMS.register("echo_in_the_wind_music_disc", () -> new Item((new Item.Properties()).setId(prefix("echo_in_the_wind_music_disc")).jukeboxPlayable(ModSounds.ECHO_IN_THE_WIND_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ELD_UNKNOWN_MUSIC_DISC = ITEMS.register("eld_unknown_music_disc", () -> new Item((new Item.Properties()).setId(prefix("eld_unknown_music_disc")).jukeboxPlayable(ModSounds.ELD_UNKNOWN_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ENDLESS_MUSIC_DISC = ITEMS.register("endless_music_disc", () -> new Item((new Item.Properties()).setId(prefix("endless_music_disc")).jukeboxPlayable(ModSounds.ENDLESS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> FEATHERFALL_MUSIC_DISC = ITEMS.register("featherfall_music_disc", () -> new Item((new Item.Properties()).setId(prefix("featherfall_music_disc")).jukeboxPlayable(ModSounds.FEATHERFALL_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> FIREBUGS_MUSIC_DISC = ITEMS.register("firebugs_music_disc", () -> new Item((new Item.Properties()).setId(prefix("firebugs_music_disc")).jukeboxPlayable(ModSounds.FIREBUGS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> FLOATING_DREAM_MUSIC_DISC = ITEMS.register("floating_dream_music_disc", () -> new Item((new Item.Properties()).setId(prefix("floating_dream_music_disc")).jukeboxPlayable(ModSounds.FLOATING_DREAM_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> FLOATING_TREES_MUSIC_DISC = ITEMS.register("floating_trees_music_disc", () -> new Item((new Item.Properties()).setId(prefix("floating_trees_music_disc")).jukeboxPlayable(ModSounds.FLOATING_TREES_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> HAGGSTROM_MUSIC_DISC = ITEMS.register("haggstrom_music_disc", () -> new Item((new Item.Properties()).setId(prefix("haggstrom_music_disc")).jukeboxPlayable(ModSounds.HAGGSTROM_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> HAUNT_MUSKIE_MUSIC_DISC = ITEMS.register("haunt_muskie_music_disc", () -> new Item((new Item.Properties()).setId(prefix("haunt_muskie_music_disc")).jukeboxPlayable(ModSounds.HAUNT_MUSKIE_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> INFINITE_AMETHYST_MUSIC_DISC = ITEMS.register("infinite_amethyst_music_disc", () -> new Item((new Item.Properties()).setId(prefix("infinite_amethyst_music_disc")).jukeboxPlayable(ModSounds.INFINITE_AMETHYST_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> KEY_MUSIC_DISC = ITEMS.register("key_music_disc", () -> new Item((new Item.Properties()).setId(prefix("key_music_disc")).jukeboxPlayable(ModSounds.KEY_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> KOMOREBI_MUSIC_DISC = ITEMS.register("komorebi_music_disc", () -> new Item((new Item.Properties()).setId(prefix("komorebi_music_disc")).jukeboxPlayable(ModSounds.KOMOREBI_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> LABYRINTHINE_MUSIC_DISC = ITEMS.register("labyrinthine_music_disc", () -> new Item((new Item.Properties()).setId(prefix("labyrinthine_music_disc")).jukeboxPlayable(ModSounds.LABYRINTHINE_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> LEFT_TO_BLOOM_MUSIC_DISC = ITEMS.register("left_to_bloom_music_disc", () -> new Item((new Item.Properties()).setId(prefix("left_to_bloom_music_disc")).jukeboxPlayable(ModSounds.LEFT_TO_BLOOM_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> LIVING_MICE_MUSIC_DISC = ITEMS.register("living_mice_music_disc", () -> new Item((new Item.Properties()).setId(prefix("living_mice_music_disc")).jukeboxPlayable(ModSounds.LIVING_MICE_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MICE_ON_VENUS_MUSIC_DISC = ITEMS.register("mice_on_venus_music_disc", () -> new Item((new Item.Properties()).setId(prefix("mice_on_venus_music_disc")).jukeboxPlayable(ModSounds.MICE_ON_VENUS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MINECRAFT_MUSIC_DISC = ITEMS.register("minecraft_music_disc", () -> new Item((new Item.Properties()).setId(prefix("minecraft_music_disc")).jukeboxPlayable(ModSounds.MINECRAFT_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MOOG_CITY_2_MUSIC_DISC = ITEMS.register("moog_city_2_music_disc", () -> new Item((new Item.Properties()).setId(prefix("moog_city_2_music_disc")).jukeboxPlayable(ModSounds.MOOG_CITY_2_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> MUTATION_MUSIC_DISC = ITEMS.register("mutation_music_disc", () -> new Item((new Item.Properties()).setId(prefix("mutation_music_disc")).jukeboxPlayable(ModSounds.MUTATION_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> ONE_MORE_DAY_MUSIC_DISC = ITEMS.register("one_more_day_music_disc", () -> new Item((new Item.Properties()).setId(prefix("one_more_day_music_disc")).jukeboxPlayable(ModSounds.ONE_MORE_DAY_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> OXYGENE_MUSIC_DISC = ITEMS.register("oxygene_music_disc", () -> new Item((new Item.Properties()).setId(prefix("oxygene_music_disc")).jukeboxPlayable(ModSounds.OXYGENE_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> POKOPOKO_MUSIC_DISC = ITEMS.register("pokopoko_music_disc", () -> new Item((new Item.Properties()).setId(prefix("pokopoko_music_disc")).jukeboxPlayable(ModSounds.POKOPOKO_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> PUZZLEBOX_MUSIC_DISC = ITEMS.register("puzzlebox_music_disc", () -> new Item((new Item.Properties()).setId(prefix("puzzlebox_music_disc")).jukeboxPlayable(ModSounds.PUZZLEBOX_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> RUBEDO_MUSIC_DISC = ITEMS.register("rubedo_music_disc", () -> new Item((new Item.Properties()).setId(prefix("rubedo_music_disc")).jukeboxPlayable(ModSounds.RUBEDO_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> SHUNIJI_MUSIC_DISC = ITEMS.register("shuniji_music_disc", () -> new Item((new Item.Properties()).setId(prefix("shuniji_music_disc")).jukeboxPlayable(ModSounds.SHUNIJI_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> SO_BELOW_MUSIC_DISC = ITEMS.register("so_below_music_disc", () -> new Item((new Item.Properties()).setId(prefix("so_below_music_disc")).jukeboxPlayable(ModSounds.SO_BELOW_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> STAND_TALL_MUSIC_DISC = ITEMS.register("stand_tall_music_disc", () -> new Item((new Item.Properties()).setId(prefix("stand_tall_music_disc")).jukeboxPlayable(ModSounds.STAND_TALL_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> SUBWOOFER_LULLABY_MUSIC_DISC = ITEMS.register("subwoofer_lullaby_music_disc", () -> new Item((new Item.Properties()).setId(prefix("subwoofer_lullaby_music_disc")).jukeboxPlayable(ModSounds.SUBWOOFER_LULLABY_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> SWEDEN_MUSIC_DISC = ITEMS.register("sweden_music_disc", () -> new Item((new Item.Properties()).setId(prefix("sweden_music_disc")).jukeboxPlayable(ModSounds.SWEDEN_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> TASWELL_MUSIC_DISC = ITEMS.register("taswell_music_disc", () -> new Item((new Item.Properties()).setId(prefix("taswell_music_disc")).jukeboxPlayable(ModSounds.TASWELL_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> THE_END_MUSIC_DISC = ITEMS.register("the_end_music_disc", () -> new Item((new Item.Properties()).setId(prefix("the_end_music_disc")).jukeboxPlayable(ModSounds.THE_END_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> WARMTH_MUSIC_DISC = ITEMS.register("warmth_music_disc", () -> new Item((new Item.Properties()).setId(prefix("warmth_music_disc")).jukeboxPlayable(ModSounds.WARMTH_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> WENDING_MUSIC_DISC = ITEMS.register("wending_music_disc", () -> new Item((new Item.Properties()).setId(prefix("wending_music_disc")).jukeboxPlayable(ModSounds.WENDING_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> WET_HANDS_MUSIC_DISC = ITEMS.register("wet_hands_music_disc", () -> new Item((new Item.Properties()).setId(prefix("wet_hands_music_disc")).jukeboxPlayable(ModSounds.WET_HANDS_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static final DeferredItem<Item> YAKUSOKU_MUSIC_DISC = ITEMS.register("yakusoku_music_disc", () -> new Item((new Item.Properties()).setId(prefix("yakusoku_music_disc")).jukeboxPlayable(ModSounds.YAKUSOKU_KEY).stacksTo(1).rarity(Rarity.RARE)));
    public static void register(IEventBus eventBus) {
        ITEMS.register(eventBus);
    }
    private static ResourceKey<Item> prefix(String path) {
        return ResourceKey.create(Registries.ITEM, ResourceLocation.fromNamespaceAndPath(OSTMusicDiscs.MODID, path));
    }
}